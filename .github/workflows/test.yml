name: Test
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    env:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres

    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:18-alpine3.17

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15-alpine3.17
        # Provide the password for postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run -w cmd/migrations migrate
      - run: npm run test -- --detectOpenHandles
      - uses: actions/upload-artifact@v3 # upload test results
        # run this step even if previous step failed
        if: success() || failure()
        with:
          name: test-results
          path: apps/api/junit.xml
